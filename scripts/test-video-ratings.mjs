import { config } from 'dotenv';
config();

// Test video analysis ratings to understand filtering
async function testVideoRatings() {
  console.log('üéØ Testing Video Analysis Ratings...\n');

  try {
    // Import from build/compiled files or use a simple http request
    const response = await fetch('http://localhost:3000/api/leadership-videos-debug', {
      method: 'GET',
      headers: {
        'Content-Type': 'application/json',
      },
    });

    if (response.ok) {
      const data = await response.json();
      console.log('‚úÖ Got video data from API');
      
      console.log(`üìä Total videos found: ${data.videos.length}`);
      console.log(`üéØ Videos with analysis: ${data.videos.filter(v => v.analysis).length}`);
      console.log(`‚≠ê Videos with rating >= 7: ${data.videos.filter(v => v.analysis && v.analysis.overallRating >= 7).length}`);
      
      console.log('\nüìπ Video Analysis Summary:');
      data.videos.forEach(video => {
        const rating = video.analysis?.overallRating || 'No analysis';
        const filtered = video.analysis && video.analysis.overallRating < 7;
        console.log(`  ${filtered ? 'üö´' : '‚úÖ'} ${video.title} - Rating: ${rating}/10`);
      });
      
    } else {
      console.log('‚ùå API endpoint not available, using direct service test...');
      
      // Fallback: Test the issue via direct console logging
      console.log('\nüîç Issue Analysis:');
      console.log('1. Leadership page filters videos with ratings < 7/10');
      console.log('2. New videos might have low confidence ratings from AI analysis');
      console.log('3. The system prioritizes quality over quantity');
      
      console.log('\nüí° Solutions:');
      console.log('A. Lower the rating threshold from 7 to 6 or 5');
      console.log('B. Show all videos but mark quality levels');
      console.log('C. Improve AI analysis prompts for better ratings');
      console.log('D. Add manual override for specific videos');
    }

  } catch (error) {
    console.error('‚ùå Error testing video ratings:', error.message);
    
    console.log('\nü§î Direct Analysis of the Problem:');
    console.log('The user uploaded 3 new videos but only 1 is showing on the leadership page.');
    console.log('From the logs, we can see the system is filtering videos with ratings < 7/10.');
    console.log('This suggests the 2 missing videos received analysis ratings below 7.');
    
    console.log('\nüìã Recommended Actions:');
    console.log('1. IMMEDIATE: Lower rating threshold to show more videos');
    console.log('2. SHORT-TERM: Add admin controls to override filtering');
    console.log('3. LONG-TERM: Improve AI analysis accuracy for consistent ratings');
  }
}

// Also check meetings specifically
async function testMeetingsData() {
  console.log('\nüîç Testing Meetings Admin Data...\n');

  try {
    const response = await fetch('http://localhost:3000/admin/meetings', {
      method: 'GET',
    });

    if (response.ok) {
      console.log('‚úÖ Admin meetings page loads successfully');
      console.log('Issue might be in frontend data binding or S3 service');
    } else {
      console.log(`‚ùå Admin meetings page returns ${response.status}`);
    }
  } catch (error) {
    console.error('‚ùå Error accessing admin meetings page:', error.message);
    
    console.log('\nüîß Meetings Issue Analysis:');
    console.log('The admin meetings page shows 0 meetings despite S3 having data.');
    console.log('This suggests a disconnect between S3 service and frontend display.');
    
    console.log('\nüõ†Ô∏è Fix Required:');
    console.log('Check the getMeetingGroups() method and admin page data binding.');
  }
}

// Run both tests
testVideoRatings()
  .then(() => testMeetingsData())
  .then(() => console.log('\n‚úÖ Video ratings analysis completed'))
  .catch(error => console.error('‚ùå Test failed:', error)); 